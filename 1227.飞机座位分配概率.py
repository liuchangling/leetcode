#
# @lc app=leetcode.cn id=1227 lang=python3
#
# [1227] 飞机座位分配概率
# 开始之前，如果飞机没有座位，我们视为发生概率为0，所以补一个p(0)=0
# 我们接着题目继续思考。为了书写方便a-b表示a坐在b的位置上
# p(3):
# 1-1 1/1； 1-3 0/1； 1-2 降维到p(2) = 1/2
# p(3) = 1/3 * 1 + 1/3 * 0 + 1/3 * p(2) = 1/2
# 优化一下写法p(3) = 1/3(p(3)+p(2)+p(0))
# p(4):
# 1-1 1/1; 1-4 0/1;   1-2or3
# 考虑1-2，对于2来说，2可以选1，3，4。
# 2-1 1/1； 2-4 0/1； 2-3 就是3二选一 即 p(2)问题 。即选2时概率为p(3)
# 1-3 2-2, 对于3来说可以选1，4 即 p(2)问题
# 所以p(4)的完整表达为
# p(4) = 1/4( p(1) + p(3) +p(2) + p(0) )
# 将结论推广到n
# p(n) = 1/n * (p(0) + p(1) + ... + p(n-1))
# 考虑 1-1 概率为p(1); 1-n 概率为p(0)
# 1-n-1时  n-1在1,n选择  概率为p(2)
# 1-n-2时  n-2在1，n-1， n选择， 概率为1/3(p(0)+p(1)+p(2)）即  p(3)
# ....
# 1 - k 时  n-k 在 1, n - k + 1 , n - k + 2... n中选择概率为 1/(k+1) * (p(0) + p(1) +....+p(k))即p(k+1)
# ....
# 加起来我们能得到 p(n) = 1/n * (p(0) + p(1) + ... + p(n-1))

#  之后我们只需要证明对于m>=2的情况 p(m) = 1/2
# 假设已经有p(k-1)  = 1/2
# 那么根据上面推理  p(k) = 1/n(0+ 1 + 1/2+ 1/2+....+1/2) =  1/2
# @lc code=start


class Solution:
    def nthPersonGetsNthSeat(self, n: int) -> float:
        return 0.5 if n > 1 else 1.0
# @lc code=end
